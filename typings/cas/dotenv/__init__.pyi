"""
This type stub file was generated by pyright.
"""

import re
from abc import ABCMeta
from typing import Iterator, Mapping, Optional, Pattern

_posix_variable: Pattern[str] = ...
class Atom:
    __metaclass__ = ABCMeta
    def __ne__(self, other: object) -> bool:
        ...
    
    def resolve(self, env: Mapping[str, Optional[str]]) -> str:
        ...
    


class Literal(Atom):
    def __init__(self, value: str) -> None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def __eq__(self, other: object) -> bool:
        ...
    
    def __hash__(self) -> int:
        ...
    
    def resolve(self, env: Mapping[str, Optional[str]]) -> str:
        ...
    


class Variable(Atom):
    def __init__(self, name: str, default: Optional[str]) -> None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def __eq__(self, other: object) -> bool:
        ...
    
    def __hash__(self) -> int:
        ...
    
    def resolve(self, env: Mapping[str, Optional[str]]) -> str:
        ...
    


def parse_variables(value: str) -> Iterator[Atom]:
    ...

