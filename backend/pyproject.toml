[tool.poetry]
name = "panguipath-api"
version = "0.1.0"
description = ""
authors = ["Open Source UC <hello-world@osuc.dev>"]
license = "GPLv3"
readme = "readme.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
fastapi = { extras = ["all"], version = "^0.98.0" }
prisma = "^0.9"
python-cas = "^1.6.0"
python-jose = { extras = ["cryptography"], version = "^3.3.0" }
zeep = { extras = ["async"], version = "^4.2.1" }
unidecode = "^1.3.6"
python-dotenv = "^1.0.0"
limits = {extras = ["redis"], version = "^3.5.0"}
uvicorn = { extras = ["standard"], version = "^0.22.0" }
gunicorn = "^20.1.0"
ortools = "^9.6.2534"
redis = {extras = ["hiredis"], version = "^4.6.0"}
sentry-sdk = {extras = ["fastapi"], version = "^1.28.1"}
rich = "^13.4.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.275"
black = "^23.3.0"
tomli = "^2.0.1"
pyright = "^1.1.315"
pytest = "^7.4.0"
pytest-xdist = "^3.3.1"
hypothesis = "^6.81.2"


[tool.poetry.group.infra.dependencies]
ansible = "^8.1.0"
ansible-lint = { version = "^6.17.2", markers = "platform_system != 'Windows'" }
ansible-navigator = "^3.4.0"
ansible-pylibssh = "^1.1.0"
paramiko = "^3.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["app"]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "B",
    "COM",
    "C4",
    "DTZ",
    "ISC",
    "INP",
    "PIE",
    "RET",
    "SIM",
    "TCH",
    "PTH",
    "RUF",
    "NPY"
]
unfixable = [
    "F841",  # Do not auto-remove unused variables
]
ignore = [
    "B008",   # "Do not perform function call in argument defaults" (to allow `arg = Depends()`)
    "ANN101", # "Missing type annotation for `self` in method" (annotating self is too redundant)
    "ANN201",
    "ANN202", # "Missing return type annotation" (sometimes return types are too complex)
    "S101",   # "Use of `assert` detected" (debug assertions are useful)
    "TCH001" # Pydantic relies heavily on runtime type reflection
]

extend-exclude = ["typings/"]

[tool.black]
extend-exclude = """
^/typings
"""

[tool.ruff.mccabe]
max-complexity = 15

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
stubPath = "typings"
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
    "typings",
]
reportMissingTypeStubs = false

[tool.pytest.ini_options]
filterwarnings = [
    # Ignore zeep DeprecationWarnings
    "ignore::DeprecationWarning:zeep.*",
]