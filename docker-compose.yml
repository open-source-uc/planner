version: '3.8'

networks:
  caddy:
  api:

services:
  planner:
    build: ./frontend
    container_name: planner-web
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - caddy
    depends_on:
      - api
    env_file:
      - ./frontend/.env
    volumes:
      - caddy_data:/data
      - caddy_config:/config
  api:
    build: ./backend
    container_name: planner-api
    restart: always
    ports:
      - "8000:80"
    networks:
      - caddy
      - api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./siding-mock-data:/siding-mock-data
      - ./static-curriculum-data:/static-curriculum-data
    env_file:
      - ./backend/.env
  db:
    image: postgres:15
    container_name: planner-db
    restart: always
    networks:
      - api
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./database/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]

  redis:
    image: redis:7
    container_name: planner-redis
    restart: always
    networks:
      - api
    command: redis-server --save 60 1
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG"]

  cas_mock_server:
    # Run a local cas mock server container for developing purposes.
    # Don't run this service in production.
    image: node:16-alpine
    restart: always
    working_dir: /app
    ports:
      - "3004:3004"
    networks:
      - caddy
    volumes:
      - ./cas-mock/data/cas-mock-users.json:/app/data/cas-mock-users.json

volumes:
  postgres-data:
  redis-data:
  caddy_config:
  caddy_data:
    external: true
